"""empty message

Revision ID: 2875930f4d56
Revises:
Create Date: 2025-08-21 20:58:59.191623

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "2875930f4d56"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admin_config",
        sa.Column("id", sa.Integer(), server_default=sa.text("1"), nullable=False),
        sa.Column("account_mode", sa.Boolean(), nullable=False),
        sa.Column("flagfall", sa.Float(), nullable=False),
        sa.Column("per_km_rate", sa.Float(), nullable=False),
        sa.Column("per_minute_rate", sa.Float(), nullable=False),
        sa.CheckConstraint("id = 1", name="settings_singleton_id_check"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "availability_slots",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("start_dt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_dt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("reason", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.Text(), nullable=False),
        sa.Column("full_name", sa.Text(), nullable=False),
        sa.Column("password_hash", sa.Text(), nullable=False),
        sa.Column("default_pickup_address", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_users_email"), ["email"], unique=True)

    op.create_table(
        "users_v2",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("password_hash", sa.Text(), nullable=False),
        sa.Column(
            "role", sa.Enum("DRIVER", "CUSTOMER", name="userrole"), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("users_v2", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_users_v2_email"), ["email"], unique=True)

    op.create_table(
        "bookings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("pickup_location", sa.String(), nullable=False),
        sa.Column("dropoff_location", sa.String(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.Column("status", sa.Text(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "bookings_v2",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("public_code", sa.String(length=20), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "DRIVER_CONFIRMED",
                "DECLINED",
                "ON_THE_WAY",
                "ARRIVED_PICKUP",
                "IN_PROGRESS",
                "ARRIVED_DROPOFF",
                "COMPLETED",
                "CANCELLED",
                name="bookingstatus",
            ),
            nullable=False,
        ),
        sa.Column("customer_id", sa.UUID(), nullable=False),
        sa.Column("pickup_address", sa.String(), nullable=False),
        sa.Column("pickup_lat", sa.Float(), nullable=False),
        sa.Column("pickup_lng", sa.Float(), nullable=False),
        sa.Column("dropoff_address", sa.String(), nullable=False),
        sa.Column("dropoff_lat", sa.Float(), nullable=False),
        sa.Column("dropoff_lng", sa.Float(), nullable=False),
        sa.Column("pickup_when", sa.DateTime(timezone=True), nullable=False),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("passengers", sa.Integer(), nullable=False),
        sa.Column("estimated_price_cents", sa.Integer(), nullable=False),
        sa.Column("final_price_cents", sa.Integer(), nullable=True),
        sa.Column("deposit_required_cents", sa.Integer(), nullable=False),
        sa.Column("deposit_payment_intent_id", sa.String(), nullable=True),
        sa.Column("final_payment_intent_id", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["users_v2.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("bookings_v2", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_bookings_v2_public_code"), ["public_code"], unique=True
        )

    op.create_table(
        "notifications",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("booking_id", sa.UUID(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "NEW_BOOKING",
                "CONFIRMATION",
                "LEAVE_NOW",
                "ON_THE_WAY",
                "ARRIVED_PICKUP",
                "STARTED",
                "ARRIVED_DROPOFF",
                "COMPLETED",
                name="notificationtype",
            ),
            nullable=False,
        ),
        sa.Column(
            "to_role",
            sa.Enum("CUSTOMER", "DRIVER", name="notificationrole"),
            nullable=False,
        ),
        sa.Column("payload", sa.JSON(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["booking_id"],
            ["bookings_v2.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "route_points",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("booking_id", sa.UUID(), nullable=False),
        sa.Column("ts", sa.DateTime(timezone=True), nullable=False),
        sa.Column("lat", sa.Float(), nullable=False),
        sa.Column("lng", sa.Float(), nullable=False),
        sa.Column("speed", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["booking_id"],
            ["bookings_v2.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trips",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("booking_id", sa.UUID(), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("ended_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("distance_meters", sa.Integer(), nullable=False),
        sa.Column("duration_seconds", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["booking_id"],
            ["bookings_v2.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("trips")
    op.drop_table("route_points")
    op.drop_table("notifications")
    with op.batch_alter_table("bookings_v2", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_bookings_v2_public_code"))

    op.drop_table("bookings_v2")
    op.drop_table("bookings")
    with op.batch_alter_table("users_v2", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_v2_email"))

    op.drop_table("users_v2")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_email"))

    op.drop_table("users")
    op.drop_table("availability_slots")
    op.drop_table("admin_config")
    # ### end Alembic commands ###
