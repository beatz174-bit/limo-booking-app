"""cleanup placeholder migrations

Revision ID: 96f7b8d1d718
Revises: 4b82e5a1c3b5
Create Date: 2025-08-21 09:59:10.796812

"""

import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

from alembic import op

# revision identifiers, used by Alembic.
revision = "96f7b8d1d718"
down_revision = "4b82e5a1c3b5"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users_v2")
    op.drop_table("route_points")
    op.drop_table("notifications")
    op.drop_table("trips")
    op.drop_table("availability_slots")
    op.drop_table("bookings_v2")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bookings_v2",
        sa.Column("id", sa.NUMERIC(), nullable=False),
        sa.Column("public_code", sa.VARCHAR(length=20), nullable=False),
        sa.Column(
            "status",
            sa.VARCHAR(length=16),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column("customer_id", sa.NUMERIC(), nullable=False),
        sa.Column("pickup_address", sa.VARCHAR(), nullable=False),
        sa.Column("pickup_lat", sa.FLOAT(), nullable=False),
        sa.Column("pickup_lng", sa.FLOAT(), nullable=False),
        sa.Column("dropoff_address", sa.VARCHAR(), nullable=False),
        sa.Column("dropoff_lat", sa.FLOAT(), nullable=False),
        sa.Column("dropoff_lng", sa.FLOAT(), nullable=False),
        sa.Column("pickup_when", sa.DATETIME(), nullable=False),
        sa.Column("notes", sa.VARCHAR(), nullable=True),
        sa.Column("passengers", sa.INTEGER(), nullable=False),
        sa.Column("estimated_price_cents", sa.INTEGER(), nullable=False),
        sa.Column("final_price_cents", sa.INTEGER(), nullable=True),
        sa.Column("deposit_required_cents", sa.INTEGER(), nullable=False),
        sa.Column("deposit_payment_intent_id", sa.VARCHAR(), nullable=True),
        sa.Column("final_payment_intent_id", sa.VARCHAR(), nullable=True),
        sa.Column(
            "created_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["users_v2.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("public_code"),
    )
    op.create_table(
        "availability_slots",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("start_dt", sa.DATETIME(), nullable=False),
        sa.Column("end_dt", sa.DATETIME(), nullable=False),
        sa.Column("reason", sa.VARCHAR(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trips",
        sa.Column("id", sa.NUMERIC(), nullable=False),
        sa.Column("booking_id", sa.NUMERIC(), nullable=False),
        sa.Column("started_at", sa.DATETIME(), nullable=False),
        sa.Column("ended_at", sa.DATETIME(), nullable=True),
        sa.Column(
            "distance_meters",
            sa.INTEGER(),
            server_default=sa.text("'0'"),
            nullable=False,
        ),
        sa.Column(
            "duration_seconds",
            sa.INTEGER(),
            server_default=sa.text("'0'"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["booking_id"],
            ["bookings_v2.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "notifications",
        sa.Column("id", sa.NUMERIC(), nullable=False),
        sa.Column("booking_id", sa.NUMERIC(), nullable=True),
        sa.Column("type", sa.VARCHAR(length=15), nullable=False),
        sa.Column("to_role", sa.VARCHAR(length=8), nullable=False),
        sa.Column(
            "payload", sqlite.JSON(), server_default=sa.text("'{}'"), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["booking_id"],
            ["bookings_v2.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "route_points",
        sa.Column("id", sa.NUMERIC(), nullable=False),
        sa.Column("booking_id", sa.NUMERIC(), nullable=False),
        sa.Column("ts", sa.DATETIME(), nullable=False),
        sa.Column("lat", sa.FLOAT(), nullable=False),
        sa.Column("lng", sa.FLOAT(), nullable=False),
        sa.Column("speed", sa.FLOAT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["booking_id"],
            ["bookings_v2.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users_v2",
        sa.Column("id", sa.NUMERIC(), nullable=False),
        sa.Column("email", sa.VARCHAR(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column(
            "role",
            sa.VARCHAR(length=8),
            server_default=sa.text("'CUSTOMER'"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    # ### end Alembic commands ###
